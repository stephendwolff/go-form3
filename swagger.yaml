swagger: '2.0'
info:
  version: "0.0.1"
  title: Form3 Corelib data structures.
host: api.form3.tech
schemes:
  - https
basePath: /v1
paths:

  /units:

    post:
      summary: Create organisation
      tags:
       - Organisations
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Organisation creation request
          in: body
          schema:
            $ref: "#/definitions/OrganisationCreation"

      responses:
        201:
          description: Organisation creation response
          schema:
            $ref: "#/definitions/OrganisationCreationResponse"


    get:
      summary: List all organisations
      tags:
        - Organisations
      parameters:
        - name: filter[child_organisation_id]
          in: query
          description: Child org id
          required: false
          type: string
          format: uuid

      responses:
        200:
          description: List of organisation details
          schema:
            $ref: "#/definitions/OrganisationDetailsListResponse"


  /units/{id}:

    get:
      summary: Fetch organisation
      tags:
        - Organisations
      parameters:
        - name: id
          in: path
          description: Organisation Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Organisation details
          schema:
            $ref: "#/definitions/OrganisationDetailsResponse"

    delete:
      summary: Delete organisation
      tags:
        - Organisations
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Organisation Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Organisation deleted

    patch:
      summary: Update organisation
      tags:
        - Organisations
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Organisation Id
          required: true
          type: string
          format: uuid
        - name: Organisation update request
          in: body
          schema:
            $ref: "#/definitions/OrganisationUpdate"
      responses:
        200:
          description: Organisation details
          schema:
            $ref: "#/definitions/OrganisationDetailsResponse"

  /users:

    post:
      summary: Create user
      tags:
       - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: User creation request
          in: body
          schema:
            $ref: "#/definitions/UserCreation"

      responses:
        201:
          description: User creation response
          schema:
            $ref: "#/definitions/UserCreationResponse"


    get:
      summary: List all users
      tags:
        - Users
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000


      responses:
        200:
          description: List of user details
          schema:
            $ref: "#/definitions/UserDetailsListResponse"


  /users/{user_id}:

    get:
      summary: Fetch user
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: User details
          schema:
            $ref: "#/definitions/UserDetailsResponse"

    patch:
      summary: Edit user details
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: User update request
          in: body
          schema:
            $ref: "#/definitions/UserCreation"

      responses:
        200:
          description: User details
          schema:
            $ref: "#/definitions/UserDetailsResponse"

    delete:
      summary: Delete user
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: User deleted


  /users/{user_id}/aces:

    get:
      summary: Get access control list for user
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: filter[record_type]
          in: query
          description: Record type
          required: false
          type: string
          pattern: ^[A-Za-z]*$
        - name: filter[action]
          in: query
          description: Access action
          required: false
          type: string
          pattern: ^[A-Za-z]*$

      responses:
        200:
          description: List of access control entries for this user
          schema:
            $ref: "#/definitions/AceDetailsListResponse"

  /users/{user_id}/roles:

    get:
      summary: Get all roles for user
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: List of roles for user
          schema:
            $ref: "#/definitions/UserRoleListResponse"

  /users/{user_id}/credentials:

    get:
      summary: Get all credentials for user
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: List of credentials for user
          schema:
            $ref: "#/definitions/UserCredentialListResponse"

    post:
      summary: Add credentials to user
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
      responses:
        201:
          description: Credential creation response
          schema:
            $ref: "#/definitions/CredentialCreationResponse"

  /users/{user_id}/credentials/{client_id}:

    delete:
      summary: Delete credential for user
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: client_id
          in: path
          description: client id
          required: true
          type: string
          format: uuid
      responses:
        204:
          description: Credential deleted

  /users/{user_id}/roles/{role_id}:

    post:
      summary: Add role to user
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
      responses:
        201:
          description: Role set OK

    delete:
      summary: Remove role from user
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
      responses:
        204:
          description: User role deleted OK

  /payport:
      post:
        summary: Create payport service association
        tags:
         - Associations
        consumes:
          - application/vnd.api+json
          - application/json
        parameters:
          - name: creation request
            in: body
            schema:
              $ref: "#/definitions/PayportAssociationCreation"

        responses:
          201:
            description: creation response
            schema:
              $ref: "#/definitions/PayportAssociationCreationResponse"


      get:
        summary: List all organisation associations
        tags:
          - Associations
        parameters:
          - name: filter[organisation_id]
            in: query
            description: Organisation id
            required: false
            type: string
            format: uuid

        responses:
          200:
            description: List of associations
            schema:
              $ref: "#/definitions/PayportAssociationDetailsListResponse"


  /payport/{id}:

    get:
      summary: Fetch service association
      tags:
        - Associations
      parameters:
        - name: id
          in: path
          description: Association Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Associations details
          schema:
            $ref: "#/definitions/PayportAssociationDetailsResponse"

    delete:
      summary: Delete service association
      tags:
        - Associations
      parameters:
        - name: id
          in: path
          description: Association Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Association deleted
  /roles:

    post:
      summary: Create role
      tags:
       - Roles
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Role creation request
          in: body
          schema:
            $ref: "#/definitions/RoleCreation"

      responses:
        201:
          description: Role creation response
          schema:
            $ref: "#/definitions/RoleCreationResponse"


    get:
      summary: List all roles
      tags:
        - Roles
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000

      responses:
        200:
          description: List of role details
          schema:
            $ref: "#/definitions/RoleDetailsListResponse"


  /roles/{role_id}:

    get:
      summary: Fetch role
      tags:
        - Roles
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Role details
          schema:
            $ref: "#/definitions/RoleDetailsResponse"

    delete:
      summary: Delete role
      tags:
        - Roles
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Role deleted

  /roles/{role_id}/aces:

    post:
      summary: Create Access Control Entry
      tags:
       - Ace
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
        - name: Ace creation request
          in: body
          schema:
            $ref: "#/definitions/AceCreation"

      responses:
        201:
          description: Ace creation response
          schema:
            $ref: "#/definitions/AceCreationResponse"


    get:
      summary: List all Access Controls for role
      tags:
        - Ace
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid

      responses:
        200:
          description: List of Ace details
          schema:
            $ref: "#/definitions/AceDetailsListResponse"


  /roles/{role_id}/aces/{ace_id}:

    get:
      summary: Fetch Access Control Entry
      tags:
        - Ace
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
        - name: ace_id
          in: path
          description: Ace Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Ace details
          schema:
            $ref: "#/definitions/AceDetailsResponse"

    delete:
      summary: Delete Access Control Entry
      tags:
        - Ace
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
        - name: ace_id
          in: path
          description: Ace Id
          required: true
          type: string
          format: uuid
      responses:
        204:
          description: Ace deleted OK
  /subscriptions:

    post:
      summary: Create subscription
      tags:
       - Subscriptions
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Subscription creation request
          in: body
          schema:
            $ref: "#/definitions/SubscriptionCreation"

      responses:
        201:
          description: Subscription creation response
          schema:
            $ref: "#/definitions/SubscriptionCreationResponse"


    get:
      summary: List all subscriptions
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000
        - name: filter[event_type]
          in: query
          description: Filter by event type
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
      tags:
        - Subscriptions

      responses:
        200:
          description: List of subscription details
          schema:
            $ref: "#/definitions/SubscriptionDetailsListResponse"


  /subscriptions/{id}:

    get:
      summary: Fetch subscription
      tags:
        - Subscriptions
      parameters:
        - name: id
          in: path
          description: Subscription Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Subscription details
          schema:
            $ref: "#/definitions/SubscriptionDetailsResponse"

    patch:
      summary: Edit subscription details
      tags:
        - Subscriptions
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Subscription Id
          required: true
          type: string
          format: uuid
        - name: Subscription update request
          in: body
          schema:
            $ref: "#/definitions/SubscriptionCreation"

      responses:
        200:
          description: Subscription details
          schema:
            $ref: "#/definitions/SubscriptionDetailsResponse"

    delete:
      summary: Deletes a subscription
      tags:
        - Subscriptions
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Subscription Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Subscription deleted OK. No body content will be returned

  /starling:

     post:
       summary: Create organisation association
       tags:
        - Associations
       consumes:
         - application/vnd.api+json
         - application/json
       parameters:
         - name: creation request
           in: body
           schema:
             $ref: "#/definitions/AssociationCreation"

       responses:
         201:
           description: creation response
           schema:
             $ref: "#/definitions/AssociationCreationResponse"


     get:
       summary: List all organisation associations
       tags:
         - Associations
       parameters:
         - name: filter[organisation_id]
           in: query
           description: Organisation id
           required: false
           type: string
           format: uuid

       responses:
         200:
           description: List of associations
           schema:
             $ref: "#/definitions/AssociationDetailsListResponse"


  /starling/{id}:

     get:
       summary: Fetch organisation association
       tags:
         - Associations
       parameters:
         - name: id
           in: path
           description: Association Id
           required: true
           type: string
           format: uuid
       responses:
         200:
           description: Associations details
           schema:
             $ref: "#/definitions/AssociationDetailsResponse"

     delete:
       summary: Delete organisation association
       tags:
         - Associations
       parameters:
         - name: id
           in: path
           description: Association Id
           required: true
           type: string
           format: uuid
         - name: version
           in: query
           description: Version
           required: true
           type: integer
           minimum: 0
       responses:
         204:
           description: Association deleted
#organisation api - end

#account api -start
  /accounts:

    post:
      summary: Create account
      tags:
       - Accounts
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Account creation request
          in: body
          schema:
            $ref: "#/definitions/AccountCreation"

      responses:
        201:
          description: Account creation response
          schema:
            $ref: "#/definitions/AccountCreationResponse"


    get:
      summary: List accounts
      tags:
        - Accounts
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000
        - name: filter[organisation_id]
          in: query
          description: Filter by organisation id
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: csv
        - name: filter[bank_id_code]
          in: query
          description: Filter by type of bank id e.g. "GBDSC"
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: filter[bank_id]
          in: query
          description: Filter by bank id e.g. sort code or bic
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: filter[account_number]
          in: query
          description: Filter by account number
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: filter[country]
          in: query
          description: Filter by country e.g. FR,GB
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: filter[customer_id]
          in: query
          description: Filter by customer_id
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: filter[iban]
          in: query
          description: Filter by IBAN
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv

      responses:
        200:
          description: List of account details
          schema:
            $ref: "#/definitions/AccountDetailsListResponse"


  /accounts/{id}:

    get:
      summary: Fetch account
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: Account Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Account details
          schema:
            $ref: "#/definitions/AccountDetailsResponse"

    delete:
      summary: Delete account
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: Account Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Account deleted


  /bankids:

    post:
      summary: Create bank id
      tags:
       - Accounts
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: BankId creation request
          in: body
          schema:
            $ref: "#/definitions/BankIdCreation"

      responses:
        201:
          description: BankId creation response
          schema:
            $ref: "#/definitions/BankIdCreationResponse"

    get:
      summary: List bankIds
      tags:
        - Accounts
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000

      responses:
        200:
          description: List of bankId details
          schema:
            $ref: "#/definitions/BankIdDetailsListResponse"

  /bankids/{id}:

    get:
      summary: Fetch bankId
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: Bank Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: BankId details
          schema:
            $ref: "#/definitions/BankIdDetailsResponse"

    delete:
      summary: Delete bankId
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: BankId Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: BankId deleted

  /bics:

    post:
      summary: Create BIC
      tags:
       - Accounts
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Bic creation request
          in: body
          schema:
            $ref: "#/definitions/BicCreation"

      responses:
        201:
          description: Bic creation response
          schema:
            $ref: "#/definitions/BicCreationResponse"

    get:
      summary: List bics
      tags:
        - Accounts
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000

      responses:
        200:
          description: List of bic details
          schema:
            $ref: "#/definitions/BicDetailsListResponse"

  /bics/{id}:

    get:
      summary: Fetch Bic
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: Bic Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Bic details
          schema:
            $ref: "#/definitions/BicDetailsResponse"

    delete:
      summary: Delete BIC
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: Bic Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Bic deleted


  /accountconfigurations:

    post:
      summary: Create configuration
      tags:
       - Accounts
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: AccountConfiguration creation request
          in: body
          schema:
            $ref: "#/definitions/AccountConfigurationCreation"

      responses:
        201:
          description: AccountConfiguration creation response
          schema:
            $ref: "#/definitions/AccountConfigurationCreationResponse"

    get:
      summary: List configurations
      tags:
        - Accounts
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000

      responses:
        200:
          description: List of configuration details
          schema:
            $ref: "#/definitions/AccountConfigurationDetailsListResponse"

  /accountconfigurations/{id}:

    get:
      summary: Fetch AccountConfiguration
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: AccountConfiguration Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: AccountConfiguration details
          schema:
            $ref: "#/definitions/AccountConfigurationDetailsResponse"

    delete:
      summary: Delete config
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: AccountConfiguration Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: AccountConfiguration deleted

    patch:
      summary: Amend config
      tags:
        - Accounts
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Configuration Id
          required: true
          type: string
          format: uuid
        - name: config amend request
          in: body
          schema:
            $ref: "#/definitions/ConfigurationAmendment"
      responses:
        200:
          description: Configuration updated
          schema:
            $ref: "#/definitions/AccountConfigurationDetailsResponse"
#account api -end

  /limits:
    post:
      summary: Create a limit
      tags:
       - Limits
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
      - name: Limit creation request
        in: body
        schema:
          $ref: "#/definitions/LimitCreation"
      responses:
        201:
          description: Limit creation response
          schema:
            $ref: "#/definitions/LimitCreationResponse"

        400:
          description: Limit creation error
          schema:
            $ref: "#/definitions/ApiError"

    get:
      summary: List limits
      tags:
        - Limits
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: string
          minimum: 0
          pattern: "$[A-z0-9]{4}^"
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000
        - name: filter[organisation_id]
          in: query
          description: Filter by organisation id
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: csv
      responses:
        200:
          description: List of limit details
          schema:
            $ref: "#/definitions/LimitDetailsListResponse"

  /limits/{id}:

    get:
      summary: Fetch limit
      tags:
        - Limits
      parameters:
        - name: id
          in: path
          description: limit Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Limit details
          schema:
            $ref: "#/definitions/LimitDetailsResponse"

    patch:
      summary: Amend limit
      tags:
        - Limits
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Limit Id
          required: true
          type: string
          format: uuid
        - name: Limit amend request
          in: body
          schema:
            $ref: "#/definitions/LimitAmendment"
      responses:
        200:
          description: Limit updated
          schema:
            $ref: "#/definitions/LimitDetailsResponse"

    delete:
      summary: Delete limit
      tags:
        - Limits
      parameters:
        - name: id
          in: path
          description: Limit Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Limit deleted

  /bacs:

    post:
      summary: Create organisation association for BACS
      tags:
       - Associations
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: creation request
          in: body
          schema:
            $ref: "#/definitions/BacsAssociationCreation"

      responses:
        201:
          description: creation response
          schema:
            $ref: "#/definitions/BacsAssociationCreationResponse"


    get:
      summary: List all organisation associations for BACS
      tags:
        - Associations
      parameters:
        - name: filter[organisation_id]
          in: query
          description: Organisation id
          required: false
          type: string
          format: uuid

      responses:
        200:
          description: List of associations for BACS
          schema:
            $ref: "#/definitions/BacsAssociationDetailsListResponse"


  /bacs/{id}:

    get:
      summary: Fetch organisation association for BACS
      tags:
        - Associations
      parameters:
        - name: id
          in: path
          description: Association Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Associations details for BACS
          schema:
            $ref: "#/definitions/BacsAssociationDetailsResponse"

    delete:
      summary: Delete organisation association for BACS
      tags:
        - Associations
      parameters:
        - name: id
          in: path
          description: Association Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Association deleted

  /sepainstant:

    post:
      summary: Create organisation association for sepa instant
      tags:
       - Associations
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: creation request
          in: body
          schema:
            $ref: "#/definitions/SepaInstantAssociationCreation"

      responses:
        201:
          description: creation response
          schema:
            $ref: "#/definitions/SepaInstantAssociationCreationResponse"


    get:
      summary: List all organisation sepa instant associations
      tags:
        - Associations
      parameters:
        - name: filter[organisation_id]
          in: query
          description: Organisation id
          required: false
          type: array
          items:
            type: string
            format: uuid

      responses:
        200:
          description: List of associations
          schema:
            $ref: "#/definitions/SepaInstantAssociationDetailsListResponse"


  /sepainstant/{id}:

    get:
      summary: Fetch organisation sepa instant association
      tags:
        - Associations
      parameters:
        - name: id
          in: path
          description: Association Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Associations details
          schema:
            $ref: "#/definitions/SepaInstantAssociationDetailsResponse"

    delete:
      summary: Delete organisation spea instant association
      tags:
        - Associations
      parameters:
        - name: id
          in: path
          description: Association Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Association deleted


#paymentapi - start

  /payments:

    post:
      summary: Create payment
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Payment creation request
          in: body
          schema:
            $ref: "#/definitions/PaymentCreation"

      responses:
        201:
          description: Payment creation response
          schema:
            $ref: "#/definitions/PaymentCreationResponse"

        400:
          description: Payment creation error
          schema:
            $ref: "#/definitions/ApiError"

    get:
      summary: List payments
      tags:
        - Payments
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: string
          minimum: 0
          pattern: "$[A-z0-9]{4}^"
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000
        - name: filter[organisation_id]
          in: query
          description: Filter by organisation id
          required: false
          type: array
          items:
            type: string
            format: uuid
        - name: filter[debtor_party.account_number]
          in: query
          required: false
          type: string
        - name: filter[debtor_party.bank_id]
          in: query
          required: false
          type: string
        - name: filter[beneficiary_party.account_number]
          in: query
          required: false
          type: string
        - name: filter[beneficiary_party.bank_id]
          in: query
          required: false
          type: string
        - name: filter[currency]
          in: query
          required: false
          type: string
        - name: filter[scheme_transaction_id]
          in: query
          required: false
          type: string
        - name: filter[payment_scheme]
          in: query
          required: false
          type: string
        - name: filter[payment_type]
          in: query
          required: false
          type: string
        - name: filter[processing_date_from]
          in: query
          required: false
          type: string
          format: date
        - name: filter[processing_date_to]
          in: query
          required: false
          type: string
          format: date
        - name: filter[unique_scheme_id]
          in: query
          required: false
          type: string
        - name: filter[submission.submission_date_from]
          in: query
          required: false
          type: string
          format: date-time
        - name: filter[submission.submission_date_to]
          in: query
          required: false
          type: string
          format: date-time
        - name: filter[submission.status]
          in: query
          description: Filter by submission status
          required: false
          type: string
        - name: filter[submission.scheme_status_code]
          description: Filter by submission scheme status code
          in: query
          required: false
          type: string
        - name: filter[admission.admission_date_from]
          in: query
          required: false
          type: string
          format: date-time
        - name: filter[admission.admission_date_to]
          in: query
          required: false
          type: string
          format: date-time
        - name: filter[admission.status]
          in: query
          description: Filter by admission status
          required: false
          type: string
        - name: filter[admission.scheme_status_code]
          description: Filter by admission scheme status code
          in: query
          required: false
          type: string

      responses:
        200:
          description: List of payment details
          schema:
            $ref: "#/definitions/PaymentDetailsListResponse"


  /payments/{id}/admissions:

    post:
      summary: create admission
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: Admission creation request
          in: body
          schema:
            $ref: "#/definitions/PaymentAdmissionCreation"

      responses:
        201:
          description: Admission creation response
          schema:
            $ref: "#/definitions/PaymentAdmissionCreationResponse"

        400:
          description: Admission creation error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/admissions/{admissionId}:

    get:
      summary: Fetch admission
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: admissionId
          in: path
          description: Admission Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Admission details
          schema:
            $ref: "#/definitions/PaymentAdmissionDetailsResponse"

  /payments/{id}/submissions:

    post:
      summary: create submission
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: Submission creation request
          in: body
          schema:
            $ref: "#/definitions/PaymentSubmissionCreation"

      responses:
        201:
          description: Submission creation response
          schema:
            $ref: "#/definitions/PaymentSubmissionCreationResponse"

        400:
          description: Submission creation error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/submissions/{submissionId}:

    get:
      summary: Fetch submission
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: submissionId
          in: path
          description: Submission Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Submission details
          schema:
            $ref: "#/definitions/PaymentSubmissionDetailsResponse"

    patch:
      summary: Update submission
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: submissionId
          in: path
          description: Submission Id
          required: true
          type: string
          format: uuid
        - name: Submission update request
          in: body
          schema:
            $ref: "#/definitions/PaymentSubmissionAmendment"

      responses:
        200:
          description: Submission update response
          schema:
            $ref: "#/definitions/PaymentSubmissionDetailsResponse"

        400:
          description: Error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/submissions/{submissionId}/validations:

    post:
      summary: Create payment submission validation
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: submissionId
          in: path
          description: Submission Id
          required: true
          type: string
          format: uuid
        - name: Payment submission validation request
          in: body
          schema:
            $ref: "#/definitions/PaymentSubmissionValidationCreation"
      responses:
        201:
          description: Payment submission validation creation response
          schema:
            $ref: "#/definitions/PaymentSubmissionValidationCreationResponse"

        400:
          description: Payment submission validation creation error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/returns:
    post:
      summary: Create return
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: Return creation request
          in: body
          schema:
            $ref: "#/definitions/ReturnCreation"

      responses:
        201:
          description: Return creation response
          schema:
            $ref: "#/definitions/ReturnCreationResponse"

        400:
          description: Return creation error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/returns/{returnId}:

    get:
      summary: Fetch return
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: returnId
          in: path
          description: Return Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Return details
          schema:
            $ref: "#/definitions/ReturnDetailsResponse"

  /payments/{id}/returns/{returnId}/admissions:
    post:
      summary: create return admission
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: returnId
          in: path
          description: Return Id
          required: true
          type: string
          format: uuid
        - name: Return admission creation request
          in: body
          schema:
            $ref: "#/definitions/ReturnAdmissionCreation"

      responses:
        201:
          description: Return admission creation response
          schema:
            $ref: "#/definitions/ReturnAdmissionCreationResponse"

        400:
          description: Return admission creation error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/returns/{returnId}/admissions/{admissionId}:
    get:
      summary: Fetch return admission
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: returnId
          in: path
          description: Return Id
          required: true
          type: string
          format: uuid
        - name: admissionId
          in: path
          description: Admission Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Return admission details
          schema:
            $ref: "#/definitions/ReturnAdmissionDetailsResponse"

  /payments/{id}/returns/{returnId}/submissions:
    post:
      summary: create return submission
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: returnId
          in: path
          description: Return Id
          required: true
          type: string
          format: uuid
        - name: Return submission creation request
          in: body
          schema:
            $ref: "#/definitions/ReturnSubmissionCreation"

      responses:
        201:
          description: Return submission creation response
          schema:
            $ref: "#/definitions/ReturnSubmissionCreationResponse"

        400:
          description: Return submission creation error
          schema:
            $ref: "#/definitions/ApiError"



  /payments/{id}/returns/{returnId}/submissions/{submissionId}:
    get:
      summary: Fetch return submission
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: returnId
          in: path
          description: Return Id
          required: true
          type: string
          format: uuid
        - name: submissionId
          in: path
          description: Submission Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Return submission details
          schema:
            $ref: "#/definitions/ReturnSubmissionDetailsResponse"

    patch:
      summary: Update return submission
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: returnId
          in: path
          description: Return Id
          required: true
          type: string
          format: uuid
        - name: submissionId
          in: path
          description: Submission Id
          required: true
          type: string
          format: uuid
        - name: Return submission update request
          in: body
          schema:
            $ref: "#/definitions/ReturnSubmissionAmendment"

      responses:
        200:
          description: Return submission update response
          schema:
            $ref: "#/definitions/ReturnSubmissionDetailsResponse"

        400:
          description: Error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/returns/{returnId}/submissions/{returnSubmissionId}/validations:
    post:
      summary: Create return submission validation
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: returnId
          in: path
          description: Return Id
          required: true
          type: string
          format: uuid
        - name: returnSubmissionId
          in: path
          description: Return Submission Id
          required: true
          type: string
          format: uuid
        - name: Return submission validation request
          in: body
          schema:
            $ref: "#/definitions/ReturnSubmissionValidationCreation"
      responses:
        201:
          description: Return submission validation creation response
          schema:
            $ref: "#/definitions/ReturnSubmissionValidationCreationResponse"

        400:
          description: Return submission validation creation error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/returns/{returnId}/reversals:
    post:
      summary: Create return reversal
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: returnId
          in: path
          description: Return Id
          required: true
          type: string
          format: uuid
        - name: Return reversal creation request
          in: body
          schema:
            $ref: "#/definitions/ReturnReversalCreation"

      responses:
        201:
          description: Reversal creation response
          schema:
            $ref: "#/definitions/ReturnReversalCreationResponse"

        400:
          description: Reversal creation error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/returns/{returnId}/reversals/{reversalId}:

    get:
      summary: Fetch return reversal
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: returnId
          in: path
          description: Return Id
          required: true
          type: string
          format: uuid
        - name: reversalId
          in: path
          description: Reversal Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Return reversal details
          schema:
            $ref: "#/definitions/ReturnReversalDetailsResponse"

  /payments/{id}/returns/{returnId}/reversals/{reversalId}/admissions:
    post:
      summary: create return reversal admission
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: returnId
          in: path
          description: Return Id
          required: true
          type: string
          format: uuid
        - name: reversalId
          in: path
          description: Reversal Id
          required: true
          type: string
          format: uuid
        - name: Return reversal admission creation request
          in: body
          schema:
            $ref: "#/definitions/ReturnReversalAdmissionCreation"

      responses:
        201:
          description: Return reversal admission creation response
          schema:
            $ref: "#/definitions/ReturnReversalAdmissionCreationResponse"

        400:
          description: Reversal admission creation error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/returns/{returnId}/reversals/{reversalId}/admissions/{admissionId}:
    get:
      summary: Fetch return reversal admission
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: returnId
          in: path
          description: Return Id
          required: true
          type: string
          format: uuid
        - name: reversalId
          in: path
          description: Reversal Id
          required: true
          type: string
          format: uuid
        - name: admissionId
          in: path
          description: Admission Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Return reversal admission details
          schema:
            $ref: "#/definitions/ReturnReversalAdmissionDetailsResponse"

  /payments/{id}/reversals:
    post:
      summary: Create reversal
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: Reversal creation request
          in: body
          schema:
            $ref: "#/definitions/ReversalCreation"

      responses:
        201:
          description: Reversal creation response
          schema:
            $ref: "#/definitions/ReversalCreationResponse"

        400:
          description: Reversal creation error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/reversals/{reversalId}:

    get:
      summary: Fetch reversal
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: reversalId
          in: path
          description: Reversal Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Reversal details
          schema:
            $ref: "#/definitions/ReversalDetailsResponse"

  /payments/{id}/reversals/{reversalId}/admissions:
    post:
      summary: create reversal admission
      tags:
       - Payments
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: reversalId
          in: path
          description: Reversal Id
          required: true
          type: string
          format: uuid
        - name: Reversal admission creation request
          in: body
          schema:
            $ref: "#/definitions/ReversalAdmissionCreation"

      responses:
        201:
          description: Reversal admission creation response
          schema:
            $ref: "#/definitions/ReversalAdmissionCreationResponse"

        400:
          description: Reversal admission creation error
          schema:
            $ref: "#/definitions/ApiError"

  /payments/{id}/reversals/{reversalId}/admissions/{admissionId}:
    get:
      summary: Fetch reversal admission
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: Payment Id
          required: true
          type: string
          format: uuid
        - name: reversalId
          in: path
          description: Reversal Id
          required: true
          type: string
          format: uuid
        - name: admissionId
          in: path
          description: Admission Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Reversal admission details
          schema:
            $ref: "#/definitions/ReversalAdmissionDetailsResponse"

  /positions:
    get:
      summary: List Positions
      tags:
        - Payments
      responses:
        200:
          description: List of position details
          schema:
            $ref: "#/definitions/PositionDetailsListResponse"

  /paymentdefaults:
    post:
      summary: Create the default settings for a payment
      tags:
      - PaymentDefaults
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Default configuration
          in: body
          schema:
            $ref: "#/definitions/PaymentDefaultsCreate"
      responses:
        201:
          description: Default settings created
          schema:
              $ref: "#/definitions/PaymentDefaultsCreateResponse"
        400:
          description: Default settings creation error
          schema:
            $ref: "#/definitions/ApiError"
    get:
      summary: List default settings for payments
      tags:
        - PaymentDefaults
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: string
          minimum: 0
          pattern: "$[A-z0-9]{4}^"
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000
        - name: filter[organisation_id]
          in: query
          description: Filter by organisation id
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: csv
      responses:
        200:
          description: List of payment defaults
          schema:
            $ref: "#/definitions/PaymentDefaultsListResponse"

  /paymentdefaults/{id}:
    get:
      summary: Fetch payment defaults
      tags:
        - PaymentDefaults
      parameters:
        - name: id
          in: path
          description: Payment defaults Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Payment default details
          schema:
            $ref: "#/definitions/PaymentDefaultsResponse"

    patch:
      summary: Update payment defaults
      tags:
       - PaymentDefaults
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Payment defaults Id
          required: true
          type: string
          format: uuid
        - name: Defaults update request
          in: body
          schema:
            $ref: "#/definitions/PaymentDefaultsAmendment"
      responses:
        200:
          description: Defaults update response
          schema:
            $ref: "#/definitions/PaymentDefaultsResponse"
        400:
          description: Error
          schema:
            $ref: "#/definitions/ApiError"

    delete:
      summary: Delete payment defaults
      tags:
        - PaymentDefaults
      parameters:
        - name: id
          in: path
          description: Limit Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Payment defaults deleted
#paymentapi - end

definitions:

  ApiError:
    type: object
    properties:
      error_message:
        type: string
      error_code:
        type: string
        format: uuid

  Links:
    type: object
    properties:
      self:
        type: string
      first:
        type: string
      prev:
        type: string
      next:
        type: string
      last:
        type: string

  Self:
    type: object
    properties:
      self:
        type: string

  RecordCount:
    type: object
    properties:
      count:
        type: integer

  #Ace
  Ace:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          role_id:
            type: string
            format: uuid
          action:
            type: string
            pattern: ^[A-Za-z]*$
          record_type:
            type: string
            pattern: ^[A-Za-z]*$
          filter:
            type: string

  AceDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Ace'
      links:
        $ref: '#/definitions/Links'

  #Versioning, Audit and Approval
  #===

  ApprovalRequest:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          record_type:
            type: string
            pattern: ^[A-Za-z]*$
          record_id:
            type: string
            format: uuid
          record_orgid:
            type: string
            format: uuid
          record_version:
            type: integer
            minimum: 0
          action:
            type: string
            pattern: ^[A-Za-z]*$
          status:
            type: string
            pattern: ^[A-Za-z]*$
          actioned_by:
            type: string
            format: uuid
          action_time:
            type: string
            format: 'date-time'
            x-nullable: true
          before_data:
            type: object
          after_data:
            type: object

  ApprovalDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/ApprovalRequest'
      links:
        $ref: '#/definitions/Links'


  AuditEntry:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          record_type:
            type: string
            pattern: ^[A-Za-z]*$
          record_id:
            type: string
            format: uuid
          actioned_by:
            type: string
            format: uuid
          action_time:
            type: string
            format: 'date-time'
            x-nullable: true
          description:
            type: string
            pattern: ^[A-Za-z0-9 .,@:]*$
          before_data:
            type: object
          after_data:
            type: object

  SubscriptionAttributes:
    type: object
    properties:
      callback_uri:
        type: string
        pattern: ^[A-Za-z0-9 .,@:\/-_]*$
      callback_transport:
        type: string
        enum:
          - http
          - email
          - queue
      user_id:
        type: string
        format: uuid
        readOnly: true
      record_type:
        type: string
        pattern: ^[A-Za-z_-]*$
      event_type:
        type: string
        pattern: ^[A-Za-z_-]*$

  #Organisation records
  #===
  #These reflect Form³, customers on the platform, and their subentities
  Organisation:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/OrganisationAttributes"

  OrganisationAttributes:
    type: object
    properties:
      name:
        type: string

  OrganisationCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Organisation'

  OrganisationUpdate:
    type: object
    properties:
      data:
        $ref: '#/definitions/Organisation'

  OrganisationCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Organisation'
      links:
        $ref: '#/definitions/Links'

  OrganisationDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Organisation'
      links:
        $ref: '#/definitions/Links'

  OrganisationDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Organisation'
      links:
        $ref: '#/definitions/Links'

  #Security info
  #===
  #User, role and security entries for individual users on the platform

  #User records
  User:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          username:
            type: string
            pattern: ^[A-Za-z0-9-+@.]*$
          email:
            type: string
            pattern: ^[A-Za-z0-9-+@.]*$
          role_ids:
            type: array
            items:
              type: string
              format: uuid

  UserCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/User'

  UserCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/User'
      links:
        $ref: '#/definitions/Links'

  UserDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/User'
      links:
        $ref: '#/definitions/Links'

  UserDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/User'
      links:
        $ref: '#/definitions/Links'


  #Roles
  Role:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/RoleAttributes"

  RoleAttributes:
    type: object
    properties:
      name:
        type: string

  RoleCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Role'

  RoleCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Role'
      links:
        $ref: '#/definitions/Links'

  RoleDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Role'
      links:
        $ref: '#/definitions/Links'

  RoleDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Role'
      links:
        $ref: '#/definitions/Links'

  #Credential
  Credential:
    type: object
    properties:
      client_id:
        type: string
        format: uuid

  CredentialSecret:
    type: object
    properties:
      client_id:
        type: string
        format: uuid
      client_secret:
        type: string

  CredentialCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/CredentialSecret'
      links:
        $ref: '#/definitions/Links'

  UserCredentialListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Credential'
      links:
        $ref: '#/definitions/Links'

  #Ace
  AceCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Ace'

  AceCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Ace'
      links:
        $ref: '#/definitions/Links'

  AceDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Ace'
      links:
        $ref: '#/definitions/Links'

  UserRoleListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Role'
      links:
        $ref: '#/definitions/Links'
  Subscription:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/SubscriptionAttributes"

  SubscriptionCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Subscription'

  SubscriptionCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Subscription'
      links:
        $ref: '#/definitions/Links'

  SubscriptionDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Subscription'
      links:
        $ref: '#/definitions/Links'

  SubscriptionDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Subscription'
      links:
        $ref: '#/definitions/Links'

#Organisation->Associations

  Association:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
          format: uuid
        version:
          type: integer
          minimum: 0
        organisation_id:
          type: string
          format: uuid
        attributes:
          $ref: "#/definitions/AssociationAttributes"

  NewAssociation:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/NewAssociationAttributes"

  NewAssociationAttributes:
    type: object
    properties:
      starling_account_name:
        type: string

  AssociationAttributes:
    type: object
    properties:
      starling_account_uid:
        type: string
        format: uuid
      starling_account_name:
        type: string

  AssociationCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/NewAssociation'

  AssociationCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Association'
      links:
        $ref: '#/definitions/Links'

  AssociationDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Association'
      links:
        $ref: '#/definitions/Links'

  AssociationDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Association'
      links:
        $ref: '#/definitions/Links'
# account api - start
  Account:
    type: object
    required:
      - id
      - organisation_id
      - attributes
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/AccountAttributes"

  AccountAttributes:
    type: object
    required:
      - country
    properties:
      country:
        type: string
        pattern: ^[A-Z]{2}$
      base_currency:
        type: string
        pattern: ^[A-Z]{3}$
      bank_id:
        type: string
        pattern: ^[A-Z0-9]{0,16}$
      bank_id_code:
        type: string
        pattern: ^[A-Z]{0,16}$
      account_number:
        type: string
        pattern: ^[A-Z0-9]{0,64}$
      customer_id:
        type: string
        pattern: ^[a-zA-Z0-9-$@., ]{0,256}$
      iban:
        type: string
        pattern: ^[A-Z]{2}[0-9]{2}[A-Z0-9]{0,64}$
      bic:
        type: string
        pattern: ^([A-Z]{6}[A-Z0-9]{2}|[A-Z]{6}[A-Z0-9]{5})$

  AccountCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Account'

  AccountCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Account'
      links:
        $ref: '#/definitions/Links'

  AccountDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Account'
      links:
        $ref: '#/definitions/Links'

  AccountDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Account'
      links:
        $ref: '#/definitions/Links'

  BankId:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/BankIdAttributes"

  BankIdAttributes:
    type: object
    properties:
      country:
        type: string
        pattern: ^[A-Z]{2}$
      bank_id:
        type: string
        pattern: ^[A-Z0-9]{0,16}$
      bank_id_code:
        type: string
        pattern: ^[A-Z]{0,16}$

  BankIdCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/BankId'

  BankIdCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/BankId'
      links:
        $ref: '#/definitions/Links'

  BankIdDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/BankId'
      links:
        $ref: '#/definitions/Links'

  BankIdDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/BankId'
      links:
        $ref: '#/definitions/Links'

  Bic:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/BicAttributes"

  BicAttributes:
    type: object
    properties:
      bic:
        type: string
        pattern: ^([A-Z]{6}[A-Z0-9]{2}|[A-Z]{6}[A-Z0-9]{5})$

  BicCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Bic'

  BicCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Bic'
      links:
        $ref: '#/definitions/Links'

  BicDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Bic'
      links:
        $ref: '#/definitions/Links'

  BicDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Bic'
      links:
        $ref: '#/definitions/Links'

  AccountConfiguration:
    type: object
    properties:
      type:
        type: string
        pattern: ^account_configurations$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/AccountConfigurationAttributes"

  AccountConfigurationAttributes:
    type: object
    properties:
      account_generation_enabled:
        type: boolean
      account_generation_configuration:
        type: array
        items:
          type: object
          $ref: "#/definitions/AccountGenerationConfiguration"

  AccountGenerationConfiguration:
    type: object
    properties:
      country:
        type: string
      valid_account_ranges:
        type: array
        items:
          type: object
          properties:
            minimum:
              type: integer
              format: int64
            maximum:
              type: integer
              format: int64

  AccountConfigurationCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountConfiguration'

  AccountConfigurationCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountConfiguration'
      links:
        $ref: '#/definitions/Links'

  AccountConfigurationDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountConfiguration'
      links:
        $ref: '#/definitions/Links'

  AccountConfigurationDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/AccountConfiguration'
      links:
        $ref: '#/definitions/Links'

  ConfigurationAmendment:
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountConfiguration'
# account api - end

  PayportAssociation:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/PayportAssociationAttributes"

  PayportAssociationAttributes:
    type: object
    properties:
      participant_id:
        type: string
      customer_sending_fps_institution:
        type: string
      sponsor_bank_id:
        type: string
      sponsor_account_number:
        type: string

  PayportAssociationCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/PayportAssociation'

  PayportAssociationCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/PayportAssociation'
      links:
        $ref: '#/definitions/Links'

  PayportAssociationDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/PayportAssociation'
      links:
        $ref: '#/definitions/Links'

  PayportAssociationDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/PayportAssociation'
      links:
        $ref: '#/definitions/Links'

  ResourceType:
     type: string
     enum:
       - payport_associations
       - limits
       - bacs_associations

  LimitCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Limit'

  LimitCreationResponse:
      type: object
      properties:
        data:
          $ref: '#/definitions/Limit'

  LimitDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Limit'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/RecordCount'

  LimitDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Limit'

  LimitAmendment:
    type: object
    properties:
      data:
        $ref: '#/definitions/Limit'

  Limit:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          gateway:
            type: string
            pattern: ^[A-Za-z_\-]*$
          scheme:
            type: string
            pattern: ^[A-Za-z_\-]*$
          amount:
            type: string
            pattern: ^[0-9.]{0,20}$
          settlement_cycle_type:
            $ref: '#/definitions/SettlementCycleType'

  SettlementCycleType:
    type: string
    enum:
      - daily
      - per_scheme


  BacsAssociation:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
          format: uuid
        version:
          type: integer
          minimum: 0
        organisation_id:
          type: string
          format: uuid
        attributes:
          $ref: "#/definitions/BacsAssociationAttributes"

  BacsNewAssociation:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/BacsAssociationAttributes"

  BacsAssociationAttributes:
    type: object
    properties:
      service_user_number:
        type: string
        pattern: ^[0-9A-Z]{6}$
      account_number:
        type: string
        pattern: ^[0-9]{8}$
      sorting_code:
        type: string
        pattern: ^[0-9]{6}$
      account_type:
        type: integer

  BacsAssociationCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/BacsNewAssociation'

  BacsAssociationCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/BacsAssociation'
      links:
        $ref: '#/definitions/Links'

  BacsAssociationDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/BacsAssociation'
      links:
        $ref: '#/definitions/Links'

  BacsAssociationDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/BacsAssociation'
      links:
        $ref: '#/definitions/Links'

  SepaInstantAssociation:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/SepaInstantAssociationAttributes"

  NewSepaInstantAssociation:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/SepaInstantAssociationAttributes"

  SepaInstantAssociationAttributes:
    type: object
    properties:
      certificate_dn:
        type: string
      certificate_serial_number:
        type: string
      certificate_pin:
        type: string

  SepaInstantAssociationCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/NewSepaInstantAssociation'

  SepaInstantAssociationCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/SepaInstantAssociation'
      links:
        $ref: '#/definitions/Links'

  SepaInstantAssociationDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/SepaInstantAssociation'
      links:
        $ref: '#/definitions/Links'

  SepaInstantAssociationDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/SepaInstantAssociation'
      links:
        $ref: '#/definitions/Links'

# paymentapi - start

  Payment:
    type: object
    required:
      - id
      - organisation_id
      - attributes
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          amount:
            type: string
            pattern: ^[0-9.]{0,20}$
          batch_booking_indicator:
            type: string
          batch_id:
            type: string
          batch_type:
            type: string
          beneficiary_party:
            type: object
            properties:
              account_name:
                type: string
              account_number:
                type: string
                pattern: ^[A-Z0-9]{6,34}$
              account_number_code:
                $ref: '#/definitions/AccountNumberCode'
              account_type:
                type: integer
              account_with:
                $ref: '#/definitions/AccountHoldingEntity'
              address:
                type: array
                items:
                  type: string
              birth_date:
                type: string
                format: date
              birth_city:
                type: string
              birth_country:
                type: string
              birth_province:
                type: string
              country:
                type: string
              name:
                type: string
              organisation_identification:
                type: string
              organisation_identification_code:
                type: string
              organisation_identification_issuer:
                type: string
              telephone_number:
                type: string
          category_purpose_coded:
            type: string
          category_purpose:
            type: string
          charges_information:
            $ref: '#/definitions/ChargesInformation'
          clearing_id:
            type: string
          currency:
            type: string
          debtor_party:
            type: object
            properties:
              account_name:
                type: string
              account_number:
                type: string
                pattern: ^[A-Z0-9]{6,34}$
              account_number_code:
                $ref: '#/definitions/AccountNumberCode'
              account_with:
                $ref: '#/definitions/AccountHoldingEntity'
              address:
                type: array
                items:
                  type: string
              birth_date:
                type: string
                format: date
              birth_city:
                type: string
              birth_country:
                type: string
              birth_province:
                type: string
              country:
                type: string
              customer_id:
                type: string
              customer_id_code:
                type: string
              name:
                type: string
              organisation_identification:
                type: string
              organisation_identification_code:
                type: string
              organisation_identification_issuer:
                type: string
          end_to_end_reference:
            type: string
          file_number:
            type: string
          fx:
            type: object
            properties:
              contract_reference:
                type: string
              exchange_rate:
                type: string
              original_amount:
                type: string
              original_currency:
                type: string
          intermediary_bank:
            $ref: '#/definitions/AccountHoldingEntity'
          numeric_reference:
            type: string
          payment_acceptance_datetime:
            type: string
            format: date-time
            x-nullable: true
          scheme_transaction_id:
            type: string
          unique_scheme_id:
            type: string
          payment_instructing_id:
            type: string
          payment_purpose:
            type: string
          payment_purpose_coded:
            type: string
          payment_scheme:
            type: string
          payment_type:
            type: string
          processing_date:
            type: string
            format: date
          receivers_correspondent:
            $ref: '#/definitions/AccountHoldingEntity'
          reference:
            type: string
          regulatory_reporting:
            type: string
          reimbursement:
            $ref: '#/definitions/AccountHoldingEntity'
          remittance_information:
            type: string
          scheme_payment_sub_type:
            type: string
          scheme_payment_type:
            type: string
          scheme_status_code:
            type: string
          senders_correspondent:
            $ref: '#/definitions/AccountHoldingEntity'
          structured_reference:
            type: object
            properties:
              issuer:
                type: string
              reference:
                type: string
          swift:
            type: object
            properties:
              bank_operation_code:
                type: string
              header:
                type: object
                properties:
                  destination:
                    type: string
                  message_type:
                    type: string
                  priority:
                    type: string
                  recipient:
                    type: string
                  source:
                    type: string
                  user_reference:
                    type: string
              instruction_code:
                type: string
              sender_receiver_information:
                type: string
              time_indication:
                type: string
          ultimate_beneficiary:
            $ref: '#/definitions/UltimateEntity'
          ultimate_debtor:
            $ref: '#/definitions/UltimateEntity'
      relationships:
        $ref: '#/definitions/PaymentRelationships'

  PaymentRelationships:
    type: object
    properties:
      payment_submission:
        $ref: '#/definitions/RelationshipLinks'
      payment_return:
        $ref: '#/definitions/RelationshipLinks'
      payment_admission:
        $ref: '#/definitions/RelationshipLinks'
      payment_reversal:
        $ref: '#/definitions/RelationshipLinks'

  AccountHoldingEntity:
    type: object
    properties:
      bank_address:
        type: array
        items:
          type: string
      bank_id:
        type: string
      bank_id_code:
        $ref: '#/definitions/BankIdCode'
      bank_name:
        type: string
      bank_party_id:
        type: string

  AccountNumberCode:
    type: string
    enum:
      - IBAN
      - BBAN

  BankIdCode:
    type: string
    enum:
      - SWBIC
      - GBDSC
      - BE
      - FR
      - DEBLZ
      - GRBIC
      - ITNCC
      - PLKNR
      - PTNCC
      - ESNCC
      - CHBCC

  UltimateEntity:
    type: object
    properties:
      name:
        type: string
      country:
        type: string
      address:
        type: string
      organisation_identification:
        type: string
      organisation_identification_code:
        type: string
      organisation_identification_issuer:
        type: string
      birth_date:
        type: string
        format: date
      birth_city:
        type: string
      birth_country:
        type: string
      birth_province:
        type: string


  ReturnPayment:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          amount:
            type: string
            pattern: ^[0-9.]{0,20}$
          currency:
            type: string
          return_code:
            type: string
          scheme_transaction_id:
            type: string
          limit_breach_start_datetime:
            type: string
            format: 'date-time'
            readOnly: true
          limit_breach_end_datetime:
            type: string
            format: 'date-time'
            readOnly: true
      relationships:
        type: object
        properties:
          payment:
            $ref: '#/definitions/RelationshipLinks'
          return_admission:
            $ref: '#/definitions/RelationshipLinks'
          return_submission:
            $ref: '#/definitions/RelationshipLinks'

  ReversalPayment:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
      relationships:
        type: object
        properties:
          payment:
            $ref: '#/definitions/RelationshipLinks'
          reversal_admission:
            $ref: '#/definitions/RelationshipLinks'

  ReversalReturn:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
      relationships:
        type: object
        properties:
          payment_return:
            $ref: '#/definitions/RelationshipLinks'
          return_reversal_admission:
            $ref: '#/definitions/RelationshipLinks'

  NewPaymentSubmission:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      relationships:
        type: object
        properties:
          validations:
            $ref: '#/definitions/RelationshipLinks'


  PaymentSubmission:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          status:
            $ref: '#/definitions/PaymentSubmissionStatus'
          scheme_status_code:
            type: string
          status_reason:
            type: string
          submission_datetime:
            type: string
            format: 'date-time'
            readOnly: true
          settlement_date:
            type: string
            format: 'date'
          settlement_cycle:
            type: integer
            minimum: 0
          redirected_bank_id:
            type: string
          redirected_account_number:
            type: string
          limit_breach_start_datetime:
            type: string
            format: 'date-time'
            readOnly: true
          limit_breach_end_datetime:
            type: string
            format: 'date-time'
            readOnly: true
          transaction_start_datetime:
            type: string
            format: 'date-time'
            readOnly: true
      relationships:
        $ref: '#/definitions/PaymentSubmissionRelationships'

  PaymentSubmissionRelationships:
    type: object
    properties:
      payment:
        $ref: '#/definitions/RelationshipLinks'
      validations:
        $ref: '#/definitions/RelationshipLinks'

  PaymentAdmission:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          status:
            $ref: '#/definitions/PaymentAdmissionStatus'
          scheme_status_code:
            type: string
          status_reason:
            $ref: '#/definitions/PaymentAdmissionStatusReason'
          admission_datetime:
            type: string
            format: 'date-time'
            readOnly: true
          settlement_date:
            type: string
            format: 'date'
          settlement_cycle:
            type: integer
            minimum: 0
      relationships:
        type: object
        properties:
          payment:
            $ref: '#/definitions/RelationshipLinks'

  NewPaymentAdmission:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          scheme_status_code:
            type: string
          admission_datetime:
            type: string
            format: 'date-time'
            readOnly: true
          settlement_date:
            type: string
            format: 'date'
          settlement_cycle:
            type: integer
            minimum: 0
          source_gateway:
            type: string

  NewReturnSubmission:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      relationships:
        $ref: '#/definitions/ReturnSubmissionRelationships'

  ReturnSubmission:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          scheme_status_code:
            type: string
          status_reason:
            type: string
          submission_datetime:
            type: string
            format: 'date-time'
            readOnly: true
          settlement_date:
            type: string
            format: 'date'
          settlement_cycle:
            type: integer
            minimum: 0
          status:
            $ref: '#/definitions/ReturnSubmissionStatus'
          redirected_bank_id:
            type: string
          redirected_account_number:
            type: string
          limit_breach_start_datetime:
            type: string
            format: 'date-time'
            readOnly: true
          limit_breach_end_datetime:
            type: string
            format: 'date-time'
            readOnly: true
          transaction_start_datetime:
            type: string
            format: 'date-time'
            readOnly: true
      relationships:
        $ref: '#/definitions/ReturnSubmissionRelationships'

  ReturnSubmissionRelationships:
    type: object
    properties:
      payment_return:
        $ref: '#/definitions/RelationshipLinks'
      validations:
        $ref: '#/definitions/RelationshipLinks'

  ReturnAdmission:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          scheme_status_code:
            type: string
          status_reason:
            type: string
          admission_datetime:
            type: string
            format: 'date-time'
            readOnly: true
          settlement_date:
            type: string
            format: 'date'
          settlement_cycle:
            type: integer
            minimum: 0
          status:
            $ref: '#/definitions/ReturnAdmissionStatus'
      relationships:
        $ref: '#/definitions/ReturnAdmissionRelationships'

  ReturnAdmissionRelationships:
    type: object
    properties:
      payment_return:
        $ref: '#/definitions/RelationshipLinks'
      validations:
        $ref: '#/definitions/RelationshipLinks'

  NewReturnAdmission:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          scheme_status_code:
            type: string
          status_reason:
            type: string
          settlement_date:
            type: string
            format: 'date'
          settlement_cycle:
            type: integer
            minimum: 0
          source_gateway:
            type: string
      relationships:
        type: object
        properties:
          validations:
            $ref: '#/definitions/RelationshipLinks'

  ReversalAdmission:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          scheme_status_code:
            type: string
          source_gateway:
            type: string
      relationships:
        type: object
        properties:
          reversal:
            $ref: '#/definitions/RelationshipLinks'

  ReturnReversalAdmission:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          source_gateway:
            type: string
          scheme_status_code:
            type: string
      relationships:
        type: object
        properties:
          payment_return_reversal:
            $ref: '#/definitions/RelationshipLinks'

  PaymentSubmissionValidation:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          source:
            $ref: '#/definitions/ValidationSource'
          status:
            $ref: '#/definitions/ValidationStatus'
          response:
            type: string

  ReturnSubmissionValidation:
    type: object
    required:
      - id
      - organisation_id
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          source:
            $ref: '#/definitions/ValidationSource'
          status:
            $ref: '#/definitions/ValidationStatus'
          response:
            type: string

  PaymentCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Payment'

  ReturnCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReturnPayment'

  ReversalCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReversalPayment'

  ReturnReversalCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReversalReturn'

  PaymentAdmissionCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/NewPaymentAdmission'

  PaymentSubmissionCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/NewPaymentSubmission'

  ReturnSubmissionCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/NewReturnSubmission'

  ReturnAdmissionCreation:
      type: object
      properties:
        data:
          $ref: '#/definitions/NewReturnAdmission'

  ReversalAdmissionCreation:
      type: object
      properties:
        data:
          $ref: '#/definitions/ReversalAdmission'

  ReturnReversalAdmissionCreation:
      type: object
      properties:
        data:
          $ref: '#/definitions/ReturnReversalAdmission'

  PaymentAmendment:
    type: object
    properties:
      data:
        $ref: '#/definitions/Payment'

  PaymentSubmissionAmendment:
    type: object
    properties:
      data:
        $ref: '#/definitions/PaymentSubmission'

  ReturnSubmissionAmendment:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReturnSubmission'

  PaymentCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Payment'
      links:
        $ref: '#/definitions/Links'

  ReturnCreationResponse:
      type: object
      properties:
        data:
          $ref: '#/definitions/ReturnPayment'
        links:
          $ref: '#/definitions/Links'

  ReversalCreationResponse:
      type: object
      properties:
        data:
          $ref: '#/definitions/ReversalPayment'
        links:
          $ref: '#/definitions/Links'

  ReturnReversalCreationResponse:
      type: object
      properties:
        data:
          $ref: '#/definitions/ReversalReturn'
        links:
          $ref: '#/definitions/Links'

  PaymentDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Payment'
      links:
        $ref: '#/definitions/Links'

  ReturnDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReturnPayment'
      links:
        $ref: '#/definitions/Links'

  ReversalDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReversalPayment'
      links:
        $ref: '#/definitions/Links'

  ReturnReversalDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReversalReturn'
      links:
        $ref: '#/definitions/Links'

  PaymentDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Payment'
      links:
        $ref: '#/definitions/Links'

  PaymentAdmissionCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/PaymentAdmission'
      links:
        $ref: '#/definitions/Links'


  PaymentSubmissionCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/PaymentSubmission'
      links:
        $ref: '#/definitions/Links'

  ReturnSubmissionCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReturnSubmission'
      links:
        $ref: '#/definitions/Links'

  ReturnAdmissionCreationResponse:
      type: object
      properties:
        data:
          $ref: '#/definitions/ReturnAdmission'
        links:
          $ref: '#/definitions/Links'

  ReversalAdmissionCreationResponse:
      type: object
      properties:
        data:
          $ref: '#/definitions/ReversalAdmission'
        links:
          $ref: '#/definitions/Links'

  ReturnReversalAdmissionCreationResponse:
      type: object
      properties:
        data:
          $ref: '#/definitions/ReturnReversalAdmission'
        links:
          $ref: '#/definitions/Links'

  PaymentAdmissionDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/PaymentAdmission'
      links:
        $ref: '#/definitions/Links'

  PaymentSubmissionDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/PaymentSubmission'
      links:
        $ref: '#/definitions/Links'

  ReturnSubmissionDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReturnSubmission'
      links:
        $ref: '#/definitions/Links'

  ReturnAdmissionDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReturnAdmission'
      links:
        $ref: '#/definitions/Links'

  ReversalAdmissionDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReversalAdmission'
      links:
        $ref: '#/definitions/Links'

  ReturnReversalAdmissionDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReturnReversalAdmission'
      links:
        $ref: '#/definitions/Links'

  PaymentSubmissionDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/PaymentSubmission'
      links:
        $ref: '#/definitions/Links'

  PaymentSubmissionValidationCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/PaymentSubmissionValidation'

  ReturnSubmissionValidationCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/ReturnSubmissionValidation'

  PaymentSubmissionValidationCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/PaymentSubmissionValidation'

  ReturnSubmissionValidationCreationResponse:
      type: object
      properties:
        data:
          $ref: '#/definitions/ReturnSubmissionValidation'

  RelationshipLinks:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/RelationshipData'

  PaymentSubmittedEvent:
    type: object
    properties:
      payment_submission:
        $ref: '#/definitions/PaymentSubmission'
      payment:
        $ref: '#/definitions/Payment'

  ReturnSubmittedEvent:
    type: object
    properties:
      payment:
        $ref: '#/definitions/Payment'
      return_payment:
        $ref: '#/definitions/ReturnPayment'
      return_submission:
        $ref: '#/definitions/ReturnSubmission'

  RelationshipData:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid

  RelationshipsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Relationship'
      links:
        $ref: '#/definitions/Links'

  Relationship:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid


  PaymentAdmissionStatus:
    type: string
    enum:
      - confirmed
      - failed

  PaymentAdmissionStatusReason:
    type: string
    enum:
      - accepted
      - invalid_beneficiary_details
      - bankid_not_provisioned
      - unknown_accountnumber

  PaymentSubmissionStatus:
    type: string
    enum:
      - accepted
      - limit_check_pending
      - limit_check_failed
      - limit_check_passed
      - released_to_gateway
      - queued_for_delivery
      - delivery_confirmed
      - delivery_failed
      - submitted
      - validation_pending

  ReturnSubmissionStatus:
    type: string
    enum:
      - accepted
      - limit_check_pending
      - limit_check_failed
      - limit_check_passed
      - released_to_gateway
      - delivery_confirmed
      - delivery_failed
      - submitted
      - validation_pending

  ReturnAdmissionStatus:
    type: string
    enum:
      - confirmed
      - failed

  ValidationStatus:
    type: string
    enum:
      - failed
      - passed
      - not_accepted

  ValidationSource:
    type: string
    enum:
      - payment_api
      - payport_interface
      - starling_gateway
      - bacs_gateway

  ChargesInformation:
    type: object
    properties:
      bearer_code:
        type: string
      receiver_charges_amount:
        type: string
      receiver_charges_currency:
        type: string
      sender_charges:
        type: array
        items:
          type: object
          properties:
            amount:
              type: string
            currency:
              type: string

  PositionDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Position'

  Position:
    type: object
    required:
      - id
      - organisation_id
      - attributes
    properties:
      type:
        type: string
        pattern: ^[A-Za-z_]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          scheme:
            type: string
            pattern: ^[A-Za-z_\-]*$
          limit:
            type: string
            pattern: ^[0-9.]{0,20}$
          position:
            type: string
            pattern: ^[0-9.]{0,20}$
      links:
        $ref: '#/definitions/Self'

  SettlementCycle:
    type: object
    required:
      - id
      - attributes
    properties:
      id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          gateway:
            type: string
            pattern: ^[A-Za-z_\-]*$
          settlement_cycle_type:
            type: string
            pattern: ^[A-Za-z_\-]*$
          settlement_cycle_number:
            type: integer
            minimum: 1

  SettlementCycleCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/SettlementCycle'

  SettlementCycleCreationResponse:
    type: object

  PaymentDefaultsCreate:
    type: object
    properties:
      data:
        $ref: '#/definitions/PaymentDefaults'

  PaymentDefaultsCreateResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/PaymentDefaults'

  PaymentDefaultsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/PaymentDefaults'

  PaymentDefaultsAmendment:
    type: object
    properties:
      data:
        $ref: '#/definitions/PaymentDefaults'

  PaymentDefaultsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/PaymentDefaults'
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/RecordCount'


  PaymentDefaults:
    type: object
    properties:
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          default_payment_scheme:
            type: string

# paymentapi - end
